@mixin fluid-type($min-vw, $max-vw, $min-value, $max-value) {
    $factor: 1 / ($max-vw - $min-vw) * ($max-value - $min-value);
    $calc-value: unquote("#{ $min-value - ($min-vw * $factor) } + #{ 100vw * $factor }");

    font-size: $min-value; // Fallback for older browsers
    font-size: clamp(#{ if($min-value > $max-value, $max-value, $min-value) }, #{ $calc-value }, #{ if($min-value > $max-value, $min-value, $max-value) });
}

// Iterate through the breakpoints and output the font-sizes for each one of them
@mixin font-size($token, $breakpoints: $grid-breakpoints) {
    @each $breakpoint, $value in $token {
        @if $breakpoint == null {
            @include make-fs($value);
        }
        @else {
            // If $values is a key that exists in $breakpoints, use the value
            @if map-has-key($breakpoints, $breakpoint) {
                $breakpoint: map-get($breakpoints, $breakpoint);

                @media screen and (min-width: $breakpoint) {
                    @include make-fs($value);
                }
            }
        }
    }
    font-size: var(--font-size);
    line-height: var(--line-height);
}

// Utility function for mixin font-size
@mixin make-fs($value) {
    @if type-of($value) == "list" {
        --font-size: #{nth($value, 1)};
        @if (length($value) > 1) {
            --line-height: #{nth($value, 2)};
        }
    }
}
